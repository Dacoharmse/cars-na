// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication and role-based access
model User {
  id                   String     @id @default(cuid())
  name                 String?
  email                String     @unique
  emailVerified        DateTime?
  image                String?
  password             String?
  role                 UserRole   @default(USER)

  // User status and admin fields
  status               UserStatus @default(ACTIVE)
  isActive             Boolean    @default(true)
  isSuspended          Boolean    @default(false)
  suspendReason        String?
  suspendedAt          DateTime?
  suspendedBy          String?
  lastLoginAt          DateTime?
  loginCount           Int        @default(0)

  // Profile fields
  phone                String?
  dateOfBirth          DateTime?
  address              String?
  city                 String?
  region               String?
  postalCode           String?

  // Email verification fields
  verificationToken    String?
  verificationExpires  DateTime?

  // Password reset fields
  resetToken           String?
  resetExpires         DateTime?

  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt

  // Relations
  dealership           Dealership? @relation(fields: [dealershipId], references: [id])
  dealershipId         String?

  // Auth relations
  accounts             Account[]
  sessions             Session[]

  // Audit trail
  auditLogs            UserAuditLog[]
}

// Dealership model for car dealerships
model Dealership {
  id                 String            @id @default(cuid())
  name               String
  businessType       String?
  registrationNumber String?
  taxNumber          String?
  contactPerson      String?
  phone              String?
  alternatePhone     String?
  streetAddress      String?
  city               String?
  region             String?
  postalCode         String?
  googleMapsUrl      String?
  website            String?
  logo               String?
  description        String?
  status             DealershipStatus  @default(PENDING)
  isVerified         Boolean           @default(false)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  
  // Relations
  users              User[]
  vehicles           Vehicle[]
  leads              Lead[]
  subscription       DealershipSubscription?
  featuredListings   FeaturedListing[]
  notifications      SubscriptionNotification[]
}

// Vehicle model for car listings
model Vehicle {
  id           String   @id @default(cuid())
  make         String
  model        String
  year         Int
  price        Float
  originalPrice Float?   // For discounted vehicles
  mileage      Int
  color        String?
  vin          String?  @unique
  description  String?
  transmission String?
  fuelType     String?
  bodyType     String?
  isPrivate    Boolean  @default(false)
  status       VehicleStatus @default(AVAILABLE)
  isNew        Boolean  @default(false) // Whether the vehicle is brand new or used
  dealerPick   Boolean  @default(false) // Whether this is a dealer-selected premium vehicle
  featured     Boolean  @default(false) // Whether this is a featured vehicle
  viewCount    Int      @default(0)     // Number of times the vehicle listing was viewed
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  dealership   Dealership @relation(fields: [dealershipId], references: [id])
  dealershipId String
  images       VehicleImage[]
  leads        Lead[]
  featuredListings FeaturedListing[]
}

// VehicleImage model for car images
model VehicleImage {
  id        String   @id @default(cuid())
  url       String
  isPrimary Boolean  @default(false)
  createdAt DateTime @default(now())
  
  // Relations
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  vehicleId String
}

// Lead model for customer inquiries
model Lead {
  id              String     @id @default(cuid())
  customerName    String
  customerEmail   String
  customerPhone   String?
  message         String?
  source          LeadSource @default(CONTACT_FORM)
  status          LeadStatus @default(NEW)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  
  // Relations
  vehicle         Vehicle    @relation(fields: [vehicleId], references: [id])
  vehicleId       String
  dealership      Dealership @relation(fields: [dealershipId], references: [id])
  dealershipId    String
}

// NextAuth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// User audit log model for tracking admin actions
model UserAuditLog {
  id          String            @id @default(cuid())
  userId      String
  action      UserAuditAction
  details     String?
  performedBy String
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime          @default(now())

  // Relations
  user        User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Enums
enum UserRole {
  ADMIN
  DEALER_PRINCIPAL
  SALES_EXECUTIVE
  USER
}

enum UserStatus {
  ACTIVE
  PENDING
  SUSPENDED
  INACTIVE
}

enum UserAuditAction {
  CREATED
  UPDATED
  DELETED
  SUSPENDED
  ACTIVATED
  PASSWORD_RESET
  EMAIL_VERIFIED
  LOGIN
  LOGOUT
  ROLE_CHANGED
}

enum VehicleStatus {
  AVAILABLE
  SOLD
  PENDING
  RESERVED
}

enum LeadSource {
  CONTACT_FORM
  WHATSAPP
  PHONE_CALL
  EMAIL
  WALK_IN
  WEBSITE
}

enum LeadStatus {
  NEW
  CONTACTED
  INTERESTED
  QUALIFIED
  CONVERTED
  CLOSED
}

enum DealershipStatus {
  PENDING
  APPROVED
  REJECTED
  SUSPENDED
}

// Subscription Plans model
model SubscriptionPlan {
  id              String                @id @default(cuid())
  name            String                @unique
  slug            String                @unique
  description     String?
  price           Float
  currency        String                @default("NAD")
  duration        Int                   // Duration in months
  features        Json                  // JSON array of features
  maxListings     Int                   @default(0) // 0 = unlimited
  maxPhotos       Int                   @default(5)
  priority        Int                   @default(0) // Higher number = higher priority
  isActive        Boolean               @default(true)
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt

  // Relations
  subscriptions   DealershipSubscription[]
}

// Dealership Subscriptions
model DealershipSubscription {
  id              String                    @id @default(cuid())
  dealershipId    String
  planId          String
  status          SubscriptionStatus        @default(ACTIVE)
  startDate       DateTime                  @default(now())
  endDate         DateTime
  autoRenew       Boolean                   @default(true)

  // Payment tracking
  paystackCustomerId      String?
  paystackSubscriptionId  String?
  lastPaymentDate         DateTime?
  nextPaymentDate         DateTime?

  // Usage tracking
  currentListings         Int           @default(0)
  listingsUsed           Int           @default(0)
  featuredListingsUsed   Int           @default(0)

  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt

  // Relations
  dealership      Dealership            @relation(fields: [dealershipId], references: [id], onDelete: Cascade)
  plan            SubscriptionPlan      @relation(fields: [planId], references: [id])
  payments        Payment[]
  usageAnalytics  UsageAnalytics[]

  @@unique([dealershipId])
}

// Payment history
model Payment {
  id                  String                @id @default(cuid())
  subscriptionId      String
  amount              Float
  currency            String                @default("NAD")
  status              PaymentStatus         @default(PENDING)
  paymentMethod       PaymentMethod         @default(PAYSTACK)

  // Paystack integration
  paystackPaymentId       String?
  paystackReference       String?

  // Payment details
  description         String?
  metadata            Json?

  paidAt              DateTime?
  failedAt            DateTime?
  refundedAt          DateTime?
  refundAmount        Float?

  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt

  // Relations
  subscription        DealershipSubscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
}

// Usage Analytics for subscriptions
model UsageAnalytics {
  id                  String                @id @default(cuid())
  subscriptionId      String
  date                DateTime              @default(now())

  // Metrics
  listingsViewed      Int                   @default(0)
  leadGenerated       Int                   @default(0)
  inquiriesReceived   Int                   @default(0)
  phoneCallsReceived  Int                   @default(0)
  featuredImpressions Int                   @default(0)
  heroImpressions     Int                   @default(0)

  // Performance metrics
  conversionRate      Float?
  averageViewTime     Int?                  // In seconds

  createdAt           DateTime              @default(now())

  // Relations
  subscription        DealershipSubscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)

  @@unique([subscriptionId, date])
}

// Featured Listings for subscription benefits
model FeaturedListing {
  id              String                @id @default(cuid())
  vehicleId       String
  dealershipId    String
  type            FeaturedType          @default(STANDARD)
  startDate       DateTime              @default(now())
  endDate         DateTime
  isActive        Boolean               @default(true)
  priority        Int                   @default(0)

  // Placement tracking
  impressions     Int                   @default(0)
  clicks          Int                   @default(0)

  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt

  // Relations
  vehicle         Vehicle               @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  dealership      Dealership            @relation(fields: [dealershipId], references: [id], onDelete: Cascade)
}

// Subscription notification system
model SubscriptionNotification {
  id              String                    @id @default(cuid())
  dealershipId    String
  type            NotificationType
  title           String
  message         String
  isRead          Boolean                   @default(false)
  actionUrl       String?

  createdAt       DateTime                  @default(now())
  readAt          DateTime?

  // Relations
  dealership      Dealership                @relation(fields: [dealershipId], references: [id], onDelete: Cascade)
}

// Enums for subscription system
enum SubscriptionStatus {
  ACTIVE
  CANCELLED
  EXPIRED
  SUSPENDED
  PENDING_PAYMENT
  PAST_DUE
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
  CANCELLED
}

enum PaymentMethod {
  PAYSTACK
  BANK_TRANSFER
  CASH
  CHEQUE
}

enum FeaturedType {
  STANDARD
  HERO
  CAROUSEL
  TOP_SEARCH
  NEWSLETTER
}

enum NotificationType {
  PAYMENT_DUE
  PAYMENT_FAILED
  SUBSCRIPTION_EXPIRING
  PLAN_UPGRADED
  PLAN_DOWNGRADED
  FEATURE_LIMIT_REACHED
  USAGE_SUMMARY
}

// Banner model for homepage advertising
model Banner {
  id          String        @id @default(cuid())
  title       String
  subtitle    String?
  description String?
  imageUrl    String?
  linkUrl     String?
  buttonText  String?
  isActive    Boolean       @default(true)
  position    BannerPosition @default(MAIN)
  priority    Int           @default(0) // Higher number = higher priority
  startDate   DateTime?
  endDate     DateTime?

  // Styling options
  backgroundColor String?
  textColor      String?
  overlayOpacity Float?        @default(0.5)

  // Tracking
  impressions    Int           @default(0)
  clicks         Int           @default(0)

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  // Relations
  createdBy      String        // User ID who created the banner
}

enum BannerPosition {
  MAIN          // Main banner area (where "Partner with Cars.na" is)
  HERO          // Hero section
  SIDEBAR       // Sidebar banners
  FOOTER        // Footer banners
  BETWEEN       // Between sections
}
